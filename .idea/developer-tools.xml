<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="DeveloperToolsToolWindowSettingsV1" lastSelectedContentNodeId="json-text-escape">
    <developerToolsConfigurations>
      <developerToolConfiguration developerToolId="json-text-escape" id="43ace633-77e5-4612-afd8-cb60970665fc" name="Workbench">
        <properties>
          <property key="sourceText" type="INPUT" value="kotlin.String|{&#10;   &quot;messages&quot;:[&#10;      {&#10;         &quot;role&quot;:&quot;user&quot;,&#10;         &quot;content&quot;:&quot;You should transform the natural language representation to the correct SMCDEL symbolic formulation. You should only output the transformed symbolic formulation as shown in the example.\n------\n=== Example Begin ===\nNatural Language Representation:\nContext:\nThere are two persons. Their names are Kimberly, and Julia. Everyone is visible to others. It is publicly announced that someone's forehead is muddy. It is publicly announced that Kimberly knows whether Julia's forehead is muddy. It is publicly announced that Julia does not know whether or not everyone's forehead is muddy.\nHypothesis:\nJulia can now know that Kimberly can know that everyone's forehead is muddy.\n\nSymbolic Formulation:\nVARS 1,2 LAW Top OBS Agenta:2 Agentb:1 VALID? [ ! (1|2) ] [ ! (Agenta knows whether 2) ] [ ! ~(Agentb knows whether (1&amp;2)) ] Agentb knows that (Agenta knows that (1&amp;2))\n=== Example End ===\n------\nNatural Language Representation:\nContext:\nThere are four persons. Their names are Cori, Howard, Michele, and Cristine. Everyone is visible to others. Each person draws a card, face unrevealed (red or black). Cristine's card is shown to Cori. Howard's card is shown to Howard. Cori's card is shown to Michele. Howard's card is shown to Michele. Cristine's card is shown to Cristine. It is publicly announced that someone picked a red card.\nHypothesis:\nCristine can now know whether Howard picked a red card.\n\nSymbolic Formulation:\n&quot;&#10;      },&#10;      {&#10;         &quot;role&quot;:&quot;assistant&quot;,&#10;         &quot;content&quot;:&quot;VARS 1,2,3,4 LAW Top OBS Agenta:4 Agentb:2 Agentc:1,2 Agentd:4 VALID? [ ! (1|2|3|4) ] (Agentd knows whether 2)&quot;&#10;      }&#10;   ]&#10;}" />
          <property key="targetText" type="INPUT" value="kotlin.String|{\n   \&quot;messages\&quot;:[\n      {\n         \&quot;role\&quot;:\&quot;user\&quot;,\n         \&quot;content\&quot;:\&quot;You should transform the natural language representation to the correct SMCDEL symbolic formulation. You should only output the transformed symbolic formulation as shown in the example.\\n------\\n=== Example Begin ===\\nNatural Language Representation:\\nContext:\\nThere are two persons. Their names are Kimberly, and Julia. Everyone is visible to others. It is publicly announced that someone's forehead is muddy. It is publicly announced that Kimberly knows whether Julia's forehead is muddy. It is publicly announced that Julia does not know whether or not everyone's forehead is muddy.\\nHypothesis:\\nJulia can now know that Kimberly can know that everyone's forehead is muddy.\\n\\nSymbolic Formulation:\\nVARS 1,2 LAW Top OBS Agenta:2 Agentb:1 VALID? [ ! (1|2) ] [ ! (Agenta knows whether 2) ] [ ! ~(Agentb knows whether (1&amp;2)) ] Agentb knows that (Agenta knows that (1&amp;2))\\n=== Example End ===\\n------\\nNatural Language Representation:\\nContext:\\nThere are four persons. Their names are Cori, Howard, Michele, and Cristine. Everyone is visible to others. Each person draws a card, face unrevealed (red or black). Cristine's card is shown to Cori. Howard's card is shown to Howard. Cori's card is shown to Michele. Howard's card is shown to Michele. Cristine's card is shown to Cristine. It is publicly announced that someone picked a red card.\\nHypothesis:\\nCristine can now know whether Howard picked a red card.\\n\\nSymbolic Formulation:\\n\&quot;\n      },\n      {\n         \&quot;role\&quot;:\&quot;assistant\&quot;,\n         \&quot;content\&quot;:\&quot;VARS 1,2,3,4 LAW Top OBS Agenta:4 Agentb:2 Agentc:1,2 Agentd:4 VALID? [ ! (1|2|3|4) ] (Agentd knows whether 2)\&quot;\n      }\n   ]\n}" />
        </properties>
      </developerToolConfiguration>
    </developerToolsConfigurations>
  </component>
</project>